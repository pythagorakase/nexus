IR EVAL REFACTORING TODO

✅ 1. Create comparison.py module:
   ✅ Extract compare_runs function
   ✅ Extract compare_query_variations function 
   ✅ Add compare_aggregated_judgments function
   ✅ Add get_related_queries function
   ✅ Test with existing functionality

✅ 2. Add query relationships to database:
   ✅ Create add_query_relationships.py script
   ✅ Define schema for relationships table (query1_id, query2_id, relationship_type)
   ✅ Add functionality to query and manipulate relationships
   ✅ Populate with initial pairs (1=10, 2=11, etc.)

✅ 3. Create copy_judgments.py script:
   ✅ Use relationships to copy judgments between paired queries
   ✅ Support both source-to-target and target-to-source copying
   ✅ Support a clean & explicit CLI interface

✅ 4. Create ir_metrics.py module:
   ✅ Extract precision_at_k function
   ✅ Extract mean_reciprocal_rank function 
   ✅ Extract binary_preference function
   ✅ Extract ndcg_at_k function
   ✅ Extract calculate_all_metrics function
   ✅ Extract average_metrics_by_category function

✅ 5. Create calculate_metrics.py script:
   ✅ Add ability to calculate metrics for specific queries
   ✅ Support calculating missing metrics for a run
   ✅ Add CLI interface for practical use

✅ 6. Create compare_query_pairs.py script:
   ✅ Use explicit relationships for comparison 
   ✅ Support judgment-only comparison
   ✅ Support metrics comparison with a run_id
   ✅ Surface relationship table dependency to users

✅ 7. Create analyze_metrics_differences.py script:
   ✅ Add detailed per-document analysis of result lists
   ✅ Identify helpful vs. harmful changes between result sets
   ✅ Provide explanations for metric changes
   ✅ Output formatted analysis and JSON data export

✅ 8. Create merge_runs_for_comparison.py script:
   ✅ Combine metrics from two separate runs
   ✅ Allow comparison of query pairs across different runs
   ✅ Integrate with detailed metrics analysis
   ✅ Support JSON output for further analysis

✅ 9. Additional refactoring tasks:
   ✅ Extract query_runner.py module (run_golden_queries)
   ✅ Extract judgments.py module (judge_all_unjudged_results)
   ✅ Extract display.py module (print_* functions)
   ✅ Extract utils.py module (load_json, save_json, etc.)
   ✅ Refine ir_eval.py main entry point to use new modules
   ✅ Create ir_eval_cli.py to handle interactive interface

✅ 10. Final cleanup:
   ✅ Update documentation for all modules
   ✅ Ensure consistent error handling
   ✅ Remove redundant code
   ✅ Add README.md for the scripts directory
   ✅ Verify all functionality still works correctly

✅ REFACTORING COMPLETE: April 23, 2025