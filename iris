#!/usr/bin/env bash

set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
UI_DIR="$ROOT_DIR/ui"

if [ ! -d "$UI_DIR" ]; then
  echo "iris: expected directory '$UI_DIR' but it does not exist" >&2
  exit 1
fi

cd "$UI_DIR"

if [ ! -d node_modules ]; then
  echo "Installing UI dependencies (first run)..."
  npm install
fi

if [ -z "${PORT:-}" ]; then
  PORT=$(python3 - <<'PY'
import socket
preferred = 5001
def is_free(port):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        try:
            s.bind(("127.0.0.1", port))
        except OSError:
            return False
    return True

if is_free(preferred):
    print(preferred)
else:
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind(("127.0.0.1", 0))
        print(s.getsockname()[1])
PY
)
fi

API_PORT="${API_PORT:-8000}"
APP_URL="http://localhost:${PORT}"

if [ -z "${DATABASE_URL:-}" ]; then
  echo "DATABASE_URL not set â€“ backend will use in-memory fixtures. Set DATABASE_URL to point at Postgres when ready." >&2
fi

if command -v open >/dev/null 2>&1; then
  ( sleep 2 && open "$APP_URL" ) >/dev/null 2>&1 &
elif command -v xdg-open >/dev/null 2>&1; then
  ( sleep 2 && xdg-open "$APP_URL" ) >/dev/null 2>&1 &
else
  echo "Launch your browser and visit $APP_URL"
fi

echo "Starting Iris dev server on $APP_URL"
echo "FastAPI audition API proxied via /api/audition (backend on port ${API_PORT})"

cleanup() {
  if [ -n "${UVICORN_PID:-}" ] && kill -0 "$UVICORN_PID" 2>/dev/null; then
    kill "$UVICORN_PID" 2>/dev/null || true
  fi
}

poetry run uvicorn nexus.api.apex_audition:app --reload --host 127.0.0.1 --port "$API_PORT" &
UVICORN_PID=$!
trap cleanup EXIT INT TERM

PORT="$PORT" npm run dev
STATUS=$?
cleanup
exit $STATUS
